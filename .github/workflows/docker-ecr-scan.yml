name: Build, Scan, and Deploy Docker Image to ECR

on:
  push:
    branches: [main]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write  # Needed to push manifest changes

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/terraform
          aws-region: ap-south-1

      - name: Get ECR_REPOSITORY from AWS Secrets Manager
        id: get_ecr_repo
        run: |
          ECR_REPO=$(aws secretsmanager get-secret-value --secret-id github/ecr-repository --region ap-south-1 --query SecretString --output text | jq -r .ECR_REPOSITORY | tr -d '\n')
          echo "ECR_REPOSITORY=$ECR_REPO" >> $GITHUB_ENV
        env:
          AWS_REGION: ap-south-1

      - name: Fail if ECR_REPOSITORY is empty
        run: |
          if [ -z "${{ env.ECR_REPOSITORY }}" ]; then
            echo "ECR_REPOSITORY is not set! Check your AWS Secrets Manager secret github/ecr-repository."
            exit 1
          fi

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .

      - name: Scan image with Trivy (before push)
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag and Push image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker tag ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update image tag in deployment.yaml
        run: |
          IMAGE_TAG=${{ github.sha }}
          REGISTRY=${{ steps.login-ecr.outputs.registry }}
          yq e '.spec.template.spec.containers[0].image = "'${REGISTRY}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}'"' -i k8s/deployment.yaml
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "ci-bot"
          git add k8s/deployment.yaml
          git commit -m "Update image tag to ${IMAGE_TAG} [ci skip]"
          git pull --rebase origin main
          git push origin main

      - name: Get K8S repo token from AWS Secrets Manager
        id: get_k8s_token
        run: |
          TOKEN=$(aws secretsmanager get-secret-value --secret-id github/k8s-repo-token --region ap-south-1 --query SecretString --output text | jq -r .K8S_REPO_TOKEN | tr -d '\n')
          echo "K8S_REPO_TOKEN=$TOKEN" >> $GITHUB_ENV
        env:
          AWS_REGION: ap-south-1

      - name: Clone the k8s repo
        run: git clone https://x-access-token:${{ env.K8S_REPO_TOKEN }}@github.com/shaileshms05/k8.git

      - name: Update deployment.yaml in k8s repo
        run: |
          cd k8/k8s
          IMAGE_TAG=${{ github.sha }}
          REGISTRY=${{ steps.login-ecr.outputs.registry }}
          yq e '.spec.template.spec.containers[0].image = "'${REGISTRY}/${{ env.ECR_REPOSITORY }}:${IMAGE_TAG}'"' -i deployment.yaml

      - name: Commit and push changes to k8s repo
        run: |
          cd k8
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "ci-bot"
          git add k8s/deployment.yaml
          git commit -m "Update image tag to ${IMAGE_TAG} [ci skip]"
          git pull --rebase origin main
          git push https://x-access-token:${{ env.K8S_REPO_TOKEN }}@github.com/shaileshms05/k8.git HEAD:main